name: Build Monorepo

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - ".devcontainer/**"
      - "environment.yml"

jobs:
  initialize_runner:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.extract_id.outputs.runpod_job_id }}

    steps:
      - name: Deploy Worker
        id: deploy
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://api.runpod.ai/v2/${{ secrets.RUNPOD_ENDPOINT }}/run"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json"}'
          bearerToken: ${{ secrets.RUNPOD_API_KEY }}
          data: '{"input":{"github_pat": "${{ secrets.GH_PAT }}", "github_org":"${{ github.repository_owner }}"}}'

      - name: Extract Job ID
        id: extract_id
        run: |
          ID=$(echo '${{ steps.deploy.outputs.response }}' | jq -r '.id')
          echo "::set-output name=runpod_job_id::$ID"

  build_image:
    needs: initialize_runner
    runs-on: runpod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: kyhoon
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.devcontainer/Dockerfile
          push: true
          tags: |
            kyhoon/diya2024-mamba-monorepo:latest
            kyhoon/diya2024-mamba-monorepo:${{ github.sha }}

  terminate_runner:
    if: always()
    needs: [build_image, initialize_runner]
    runs-on: ubuntu-latest

    steps:
      - name: Get Job Status
        id: get_status
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://api.runpod.ai/v2/${{ secrets.RUNPOD_ENDPOINT }}/status/${{ needs.initialize_runner.outputs.id }}"
          method: "GET"
          customHeaders: '{"Content-Type": "application/json"}'
          bearerToken: ${{ secrets.RUNPOD_API_KEY }}

      - name: Parse Status
        id: parse_status
        run: |
          STATUS=$(echo '${{ steps.get_status.outputs.response }}' | jq -r '.status')
          echo "::set-output name=status::$STATUS"

      - name: Shutdown Worker
        if: ${{ steps.parse_status.outputs.status != 'COMPLETED' }}
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://api.runpod.ai/v2/${{ secrets.RUNPOD_ENDPOINT }}/cancel/${{ needs.initialize_runner.outputs.id }}"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json"}'
          bearerToken: ${{ secrets.RUNPOD_API_KEY }}
